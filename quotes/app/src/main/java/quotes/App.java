/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;
import java.io.*;
import java.net.*;
import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;


import java.util.List;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) throws IOException {
        Gson gson = new Gson();

        BufferedReader reader = new BufferedReader(new FileReader("C:\\Users\\LTUC\\Desktop\\401asac\\quotes\\quotes\\app\\src\\main\\java\\quotes\\recentquotes.json"));
        List<Quotes> quote = gson.fromJson(reader, new TypeToken<List<Quotes>>() {}.getType());
        reader.close();

        int min = 0;
        int max = quote.size()-1 ;

        try{
            URL url = new URL("http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en");
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
//            connection.connect();
            connection.setRequestProperty("User-Agent", "Mozilla 5.0 (Windows; U; "
                    + "Windows NT 5.1; en-US; rv:1.8.0.11) ");
            connection.connect();
            InputStreamReader inputStreamReader = new InputStreamReader(connection.getInputStream());

            BufferedReader bufferedReader = new BufferedReader(inputStreamReader);


            BufferedWriter add = new BufferedWriter(new FileWriter("C:\\Users\\LTUC\\Desktop\\401asac\\quotes\\quotes\\app\\src\\main\\java\\quotes\\recentquotes.json" , false));
            QuoteAPI qutApi = gson.fromJson(bufferedReader,QuoteAPI.class);
            Quotes quotLocal = new Quotes(null, qutApi.getAuthor(), null,qutApi.getQuote());
            quote.add(quotLocal);
            gson = gson.newBuilder().setPrettyPrinting().create();


            System.out.println("Quote from API: "+quotLocal);
            add.write(gson.toJson(quote));
            add.close();

            bufferedReader.close();

        }catch (Exception e){
            System.out.println(quote.get((int) (Math.random()*(max- min+1)+ min)).toString());
        }

    }

}
//        System.out.println(new App().getGreeting());
//    }
//       public static void main(String[] args, String jsonString)  throws IOException {
//           URL url = new URL("http://ron-swanson-quotes.herokuapp.com/v2/quotes");
//           HttpURLConnection connection = (HttpURLConnection) url.openConnection();
//           connection.setRequestMethod("GET");
//           connection.setConnectTimeout(5000);
//           int responseCode = connection.getResponseCode();
//           if (responseCode == HttpURLConnection.HTTP_OK) {
//
//               BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
//               String inputLine = in.readLine();
////               StringBuilder content = new StringBuilder();
//
//
////               while ((inputLine = in.readLine()) != null) {
////                   content.append(inputLine);
////               }
//               System.out.println(inputLine);
//               in.close();
//           }else {
//               Gson gson = new Gson();
//               BufferedReader reader = new BufferedReader(new FileReader("./app/src/main/java/quotes/recentquotes.json"));
//               List<Quotes> quotes = gson.fromJson(reader, new TypeToken<List<Quotes>>() {
//               }.getType());
//               int min = 0;
//               int max = quotes.size() - 1;
//
//               System.out.println(quotes.get((int) (Math.random() * (max - min + 1) + min)).toString());

//               public void addToJson(String jsonString) {
//                   JsonArray recentQuote = addQuote(jsonString);
//                   try {
//                       BufferedWriter writer = new BufferedWriter(new FileWriter("./src/main/resources/recentquotes.json"));
//                       writer.write(recentQuote.toString());
//                       writer.close();
//                   } catch (IOException e) {
//                       e.printStackTrace();
//                   }
//               }






//}

//    public static JsonArray addQuote(String jsonString) {
//        JsonArray recentQuote = new JsonArray();
//        try {
//            Gson gson = new Gson();
//            JsonObject inputObj = gson.fromJson(jsonString, JsonObject.class);
//            JsonObject updatedObj = new JsonObject();
//            updatedObj.add("text", inputObj.get("starWarsQuote"));
//
//            recentQuote = gson.fromJson(new FileReader("./src/main/resources/recentquotes.json"), JsonArray.class);
//            recentQuote.add(updatedObj);
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
//        return recentQuote;
//    }
//}
